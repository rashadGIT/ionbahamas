{"ast":null,"code":"import _classCallCheck from \"C:\\\\git\\\\ionbahamas\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\git\\\\ionbahamas\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\git\\\\ionbahamas\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\git\\\\ionbahamas\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\git\\\\ionbahamas\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\git\\\\ionbahamas\\\\src\\\\components\\\\PaymentProcessor.jsx\";\nimport React, { Component } from 'react';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport { Carousel } from 'react-responsive-carousel';\nimport \"react-responsive-carousel/lib/styles/carousel.min.css\";\nimport '../css/carousel.css';\n\nvar _default =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(_default, _Component);\n\n  function _default(props) {\n    var _this;\n\n    _classCallCheck(this, _default);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(_default).call(this, props));\n\n    _this.onGetCardNonce = function (event) {\n      // Don't submit the form until SqPaymentForm returns with a nonce\n      event.preventDefault(); // Request a nonce from the SqPaymentForm object\n\n      paymentForm.requestCardNonce();\n    };\n\n    return _this;\n  }\n\n  _createClass(_default, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      // Create and initialize a payment form object\n      var paymentForm = new SqPaymentForm({\n        // Initialize the payment form elements\n        //TODO: Replace with your sandbox application ID\n        applicationId: \"sandbox-sq0idb-4BIn2NFF6UL8jHgLxzah4g\",\n        inputClass: 'sq-input',\n        autoBuild: false,\n        // Customize the CSS for SqPaymentForm iframe elements\n        inputStyles: [{\n          fontSize: '16px',\n          lineHeight: '24px',\n          padding: '16px',\n          placeholderColor: '#a0a0a0',\n          backgroundColor: 'transparent'\n        }],\n        // Initialize the credit card placeholders\n        cardNumber: {\n          elementId: 'sq-card-number',\n          placeholder: 'Card Number'\n        },\n        cvv: {\n          elementId: 'sq-cvv',\n          placeholder: 'CVV'\n        },\n        expirationDate: {\n          elementId: 'sq-expiration-date',\n          placeholder: 'MM/YY'\n        },\n        postalCode: {\n          elementId: 'sq-postal-code',\n          placeholder: 'Postal'\n        },\n        // SqPaymentForm callback functions\n        callbacks: {\n          /*\r\n          * callback function: cardNonceResponseReceived\r\n          * Triggered when: SqPaymentForm completes a card nonce request\r\n          */\n          cardNonceResponseReceived: function cardNonceResponseReceived(errors, nonce, cardData) {\n            if (errors) {\n              // Log errors from nonce generation to the browser developer console.\n              console.error('Encountered errors:');\n              errors.forEach(function (error) {\n                console.error('  ' + error.message);\n              });\n              alert('Encountered errors, check browser developer console for more details');\n              return;\n            }\n\n            alert(\"The generated nonce is:\\n\".concat(nonce)); //TODO: Replace alert with code in step 2.1\n          }\n        }\n      });\n      paymentForm.build(); //TODO: paste code from step 1.1.4\n    } //TODO: paste code from step 1.1.5\n    // onGetCardNonce is triggered when the \"Pay $1.00\" button is clicked\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        id: \"form-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        id: \"sq-card-number\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        class: \"third\",\n        id: \"sq-expiration-date\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        class: \"third\",\n        id: \"sq-cvv\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        class: \"third\",\n        id: \"sq-postal-code\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        id: \"sq-creditcard\",\n        class: \"button-credit-card\",\n        onclick: \"onGetCardNonce(event)\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }, \"Pay $1.00\")));\n    }\n  }]);\n\n  return _default;\n}(Component);\n\nexport { _default as default };","map":{"version":3,"sources":["C:\\git\\ionbahamas\\src\\components\\PaymentProcessor.jsx"],"names":["React","Component","Container","Row","Col","Carousel","props","onGetCardNonce","event","preventDefault","paymentForm","requestCardNonce","SqPaymentForm","applicationId","inputClass","autoBuild","inputStyles","fontSize","lineHeight","padding","placeholderColor","backgroundColor","cardNumber","elementId","placeholder","cvv","expirationDate","postalCode","callbacks","cardNonceResponseReceived","errors","nonce","cardData","console","error","forEach","message","alert","build"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\r\nimport Container from 'react-bootstrap/Container'\r\nimport Row from 'react-bootstrap/Row'\r\nimport Col from 'react-bootstrap/Col'\r\nimport { Carousel } from 'react-responsive-carousel';\r\nimport \"react-responsive-carousel/lib/styles/carousel.min.css\";\r\nimport '../css/carousel.css'\r\n\r\n\r\n\r\nexport default class extends Component{\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n  componentDidMount(){\r\n    // Create and initialize a payment form object\r\n    const paymentForm = new SqPaymentForm({\r\n      // Initialize the payment form elements\r\n      \r\n      //TODO: Replace with your sandbox application ID\r\n      applicationId: \"sandbox-sq0idb-4BIn2NFF6UL8jHgLxzah4g\",\r\n      inputClass: 'sq-input',\r\n      autoBuild: false,\r\n      // Customize the CSS for SqPaymentForm iframe elements\r\n      inputStyles: [{\r\n          fontSize: '16px',\r\n          lineHeight: '24px',\r\n          padding: '16px',\r\n          placeholderColor: '#a0a0a0',\r\n          backgroundColor: 'transparent',\r\n      }],\r\n      // Initialize the credit card placeholders\r\n      cardNumber: {\r\n          elementId: 'sq-card-number',\r\n          placeholder: 'Card Number'\r\n      },\r\n      cvv: {\r\n          elementId: 'sq-cvv',\r\n          placeholder: 'CVV'\r\n      },\r\n      expirationDate: {\r\n          elementId: 'sq-expiration-date',\r\n          placeholder: 'MM/YY'\r\n      },\r\n      postalCode: {\r\n          elementId: 'sq-postal-code',\r\n          placeholder: 'Postal'\r\n      },\r\n      // SqPaymentForm callback functions\r\n      callbacks: {\r\n          /*\r\n          * callback function: cardNonceResponseReceived\r\n          * Triggered when: SqPaymentForm completes a card nonce request\r\n          */\r\n          cardNonceResponseReceived: function (errors, nonce, cardData) {\r\n          if (errors) {\r\n              // Log errors from nonce generation to the browser developer console.\r\n              console.error('Encountered errors:');\r\n              errors.forEach(function (error) {\r\n                  console.error('  ' + error.message);\r\n              });\r\n              alert('Encountered errors, check browser developer console for more details');\r\n              return;\r\n          }\r\n             alert(`The generated nonce is:\\n${nonce}`);\r\n             //TODO: Replace alert with code in step 2.1\r\n          }\r\n      }\r\n    });\r\n    \r\n    paymentForm.build();\r\n\r\n    //TODO: paste code from step 1.1.4\r\n  }\r\n       //TODO: paste code from step 1.1.5\r\n     // onGetCardNonce is triggered when the \"Pay $1.00\" button is clicked\r\n    onGetCardNonce = (event) => {\r\n      // Don't submit the form until SqPaymentForm returns with a nonce\r\n      event.preventDefault();\r\n      // Request a nonce from the SqPaymentForm object\r\n      paymentForm.requestCardNonce();\r\n    }\r\n\r\n\r\n  render(){\r\n    return(\r\n          <div>\r\n            <div id=\"form-container\">\r\n              <div id=\"sq-card-number\"></div>\r\n              <div class=\"third\" id=\"sq-expiration-date\"></div>\r\n              <div class=\"third\" id=\"sq-cvv\"></div>\r\n              <div class=\"third\" id=\"sq-postal-code\"></div>\r\n              <button id=\"sq-creditcard\" class=\"button-credit-card\" onclick=\"onGetCardNonce(event)\">Pay $1.00</button>\r\n            </div> \r\n            {/* <!-- end #form-container --> \r\n            <!-- TODO: Add script from step 1.1.3 --> */}\r\n          </div>\r\n    )\r\n  }\r\n}"]},"metadata":{},"sourceType":"module"}