{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _slicedToArray = function () {\n  function sliceIterator(arr, i) {\n    var _arr = [];\n    var _n = true;\n    var _d = false;\n    var _e = undefined;\n\n    try {\n      for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n        _arr.push(_s.value);\n\n        if (i && _arr.length === i) break;\n      }\n    } catch (err) {\n      _d = true;\n      _e = err;\n    } finally {\n      try {\n        if (!_n && _i[\"return\"]) _i[\"return\"]();\n      } finally {\n        if (_d) throw _e;\n      }\n    }\n\n    return _arr;\n  }\n\n  return function (arr, i) {\n    if (Array.isArray(arr)) {\n      return arr;\n    } else if (Symbol.iterator in Object(arr)) {\n      return sliceIterator(arr, i);\n    } else {\n      throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n    }\n  };\n}();\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _moment = require('moment');\n\nvar _moment2 = _interopRequireDefault(_moment);\n\nvar _reactMomentProptypes = require('react-moment-proptypes');\n\nvar _Day = require('./Day');\n\nvar _Day2 = _interopRequireDefault(_Day);\n\nvar _utils = require('./utils');\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar propTypes = {\n  year: _propTypes2.default.number.isRequired,\n  month: _propTypes2.default.number.isRequired,\n  forceFullWeeks: _propTypes2.default.bool.isRequired,\n  showWeekSeparators: _propTypes2.default.bool.isRequired,\n  selectedDay: _reactMomentProptypes.momentObj.isRequired,\n  firstDayOfWeek: _propTypes2.default.number.isRequired,\n  selectingRange: _propTypes2.default.arrayOf(_reactMomentProptypes.momentObj),\n  selectRange: _propTypes2.default.bool.isRequired,\n  selectedRange: _propTypes2.default.arrayOf(_reactMomentProptypes.momentObj),\n  customClasses: _propTypes2.default.oneOfType([_propTypes2.default.object, _propTypes2.default.func]),\n  dayClicked: _propTypes2.default.func.isRequired,\n  dayHovered: _propTypes2.default.func.isRequired\n};\nvar defaultProps = {\n  selectingRange: undefined,\n  selectedRange: undefined,\n  customClasses: undefined\n};\n\nvar Month = function (_Component) {\n  _inherits(Month, _Component);\n\n  function Month(props) {\n    _classCallCheck(this, Month);\n\n    var _this = _possibleConstructorReturn(this, (Month.__proto__ || Object.getPrototypeOf(Month)).call(this, props));\n\n    _this.state = {};\n    return _this;\n  }\n\n  _createClass(Month, [{\n    key: 'componentWillReceiveProps',\n    value: function componentWillReceiveProps(nextProps) {\n      if (nextProps.selectingRange !== undefined) {\n        this.setState({\n          selectingRangeStart: nextProps.selectingRange[0].month(),\n          selectingRangeEnd: nextProps.selectingRange[1].month()\n        });\n      }\n    }\n  }, {\n    key: 'shouldComponentUpdate',\n    value: function shouldComponentUpdate(nextProps) {\n      var _props = this.props,\n          month = _props.month,\n          selectingRange = _props.selectingRange,\n          selectedRange = _props.selectedRange;\n      var _state = this.state,\n          selectingRangeStart = _state.selectingRangeStart,\n          selectingRangeEnd = _state.selectingRangeEnd; // full repaint for some global-affecting rendering props\n\n      if (this.props.year !== nextProps.year || this.props.forceFullWeeks !== nextProps.forceFullWeeks || this.props.showWeekSeparators !== nextProps.showWeekSeparators || this.props.firstDayOfWeek !== nextProps.firstDayOfWeek || this.props.selectRange !== nextProps.selectRange || this.props.customClasses !== nextProps.customClasses || this.props.selectRange && selectingRange === undefined && nextProps.selectingRange === undefined) {\n        return true;\n      } // if we get to this point and we are in 'selectRange' mode then it's likely that we have a change in selectingRange\n\n\n      if (this.props.selectRange) {\n        if (selectingRange === undefined) {\n          var _oldRangeStart = selectedRange[0].month();\n\n          var _oldRangeEnd = selectedRange[1].month();\n\n          if (_oldRangeStart > _oldRangeEnd) {\n            var _ref = [_oldRangeEnd, _oldRangeStart];\n            _oldRangeStart = _ref[0];\n            _oldRangeEnd = _ref[1];\n          }\n\n          var _newRangeStart = nextProps.selectingRange[0].month();\n\n          var _newRangeEnd = nextProps.selectingRange[1].month();\n\n          if (_newRangeStart > _newRangeEnd) {\n            var _ref2 = [_newRangeEnd, _newRangeStart];\n            _newRangeStart = _ref2[0];\n            _newRangeEnd = _ref2[1];\n          } // first time it's called, repaint months in old selectedRange and next selectingRange\n\n\n          return _oldRangeStart <= month && month <= _oldRangeEnd || _newRangeStart <= month && month <= _newRangeEnd;\n        } else if (nextProps.selectingRange === undefined) {\n          // last time it's called, repaint months in previous selectingRange\n          var _oldRangeStart2 = selectingRangeStart;\n          var _oldRangeEnd2 = selectingRangeEnd;\n\n          if (_oldRangeStart2 > _oldRangeEnd2) {\n            var _ref3 = [_oldRangeEnd2, _oldRangeStart2];\n            _oldRangeStart2 = _ref3[0];\n            _oldRangeEnd2 = _ref3[1];\n          }\n\n          var _newRangeStart2 = nextProps.selectedRange[0].month();\n\n          var _newRangeEnd2 = nextProps.selectedRange[1].month();\n\n          if (_newRangeStart2 > _newRangeEnd2) {\n            var _ref4 = [_newRangeEnd2, _newRangeStart2];\n            _newRangeStart2 = _ref4[0];\n            _newRangeEnd2 = _ref4[1];\n          } // called on day hovering changed\n\n\n          return _oldRangeStart2 <= month && month <= _oldRangeEnd2 || _newRangeStart2 <= month && month <= _newRangeEnd2;\n        } // called on day hovering changed\n\n\n        var oldRangeStart = selectingRangeStart;\n        var oldRangeEnd = selectingRangeEnd;\n\n        if (oldRangeStart > oldRangeEnd) {\n          ;\n          var _ref5 = [oldRangeEnd, oldRangeStart];\n          oldRangeStart = _ref5[0];\n          oldRangeEnd = _ref5[1];\n        }\n\n        var newRangeStart = nextProps.selectingRange[0].month();\n        var newRangeEnd = nextProps.selectingRange[1].month();\n\n        if (newRangeStart > newRangeEnd) {\n          var _ref6 = [newRangeEnd, newRangeStart];\n          newRangeStart = _ref6[0];\n          newRangeEnd = _ref6[1];\n        }\n\n        return oldRangeStart <= month && month <= oldRangeEnd || newRangeStart <= month && month <= newRangeEnd;\n      } else if (this.props.selectedDay.month() === month || nextProps.selectedDay.month() === month) {\n        // single selectedDay changed: repaint months where selectedDay was and where will be\n        return true;\n      }\n\n      return false;\n    }\n  }, {\n    key: 'dayClicked',\n    value: function dayClicked(day, classes) {\n      var dayClicked = this.props.dayClicked;\n      dayClicked(day, classes);\n    }\n  }, {\n    key: 'dayHovered',\n    value: function dayHovered(day) {\n      var _props2 = this.props,\n          selectRange = _props2.selectRange,\n          dayHovered = _props2.dayHovered;\n\n      if (selectRange) {\n        dayHovered(day);\n      }\n    }\n  }, {\n    key: 'renderMonthDays',\n    value: function renderMonthDays() {\n      var _this2 = this;\n\n      var _props3 = this.props,\n          year = _props3.year,\n          month = _props3.month,\n          forceFullWeeks = _props3.forceFullWeeks,\n          showWeekSeparators = _props3.showWeekSeparators,\n          selectedDay = _props3.selectedDay,\n          firstDayOfWeek = _props3.firstDayOfWeek,\n          selectingRange = _props3.selectingRange,\n          selectRange = _props3.selectRange,\n          selectedRange = _props3.selectedRange,\n          customClasses = _props3.customClasses;\n      var monthStart = (0, _moment2.default)([year, month, 1]); // current day\n      // number of days to insert before the first of the month to correctly align the weekdays\n\n      var prevMonthDaysCount = monthStart.weekday();\n\n      while (prevMonthDaysCount < firstDayOfWeek) {\n        prevMonthDaysCount += 7;\n      } // days in month\n\n\n      var numberOfDays = monthStart.daysInMonth(); // insert days at the end to match up 37 (max number of days in a month + 6)\n      // or 42 (if user prefers seeing the week closing with Sunday)\n\n      var totalDays = forceFullWeeks ? 42 : 37; // day-generating loop\n\n      var days = [];\n      (0, _utils.range)(firstDayOfWeek + 1, totalDays + firstDayOfWeek + 1).forEach(function (i) {\n        var day = (0, _moment2.default)([year, month, i - prevMonthDaysCount]); // pick appropriate classes\n\n        var classes = [];\n\n        if (i <= prevMonthDaysCount) {\n          classes.push('prev-month');\n        } else if (i > numberOfDays + prevMonthDaysCount) {\n          classes.push('next-month');\n        } else {\n          if (selectRange) {\n            // selectingRange is used while user is selecting a range\n            // (has clicked on start day, and is hovering end day - but not yet clicked)\n            var start = (selectingRange || selectedRange)[0];\n            var end = (selectingRange || selectedRange)[1]; // validate range\n\n            if (end.isBefore(start)) {\n              var _ref7 = selectingRange || selectedRange;\n\n              var _ref8 = _slicedToArray(_ref7, 2);\n\n              end = _ref8[0];\n              start = _ref8[1];\n            }\n\n            if (day.isBetween(start, end, 'day', '[]')) {\n              classes.push('range');\n            }\n\n            if (day.isSame(start, 'day')) {\n              classes.push('range-left');\n            }\n\n            if (day.isSame(end, 'day')) {\n              classes.push('range-right');\n            }\n          } else if (day.isSame(selectedDay, 'day')) {\n            classes.push('selected');\n          } // call here customClasses function to avoid giving improper classes to prev/next month\n\n\n          if (customClasses instanceof Function) {\n            classes.push(customClasses(day));\n          }\n        }\n\n        if ((i - 1) % 7 === 0) {\n          // sunday\n          classes.push('bolder');\n        }\n\n        if (customClasses) {\n          Object.keys(customClasses).forEach(function (k) {\n            var obj = customClasses[k]; // Order here is important! Everything is instance of Object in js\n\n            if (typeof obj === 'string') {\n              if (obj.indexOf(day.format('ddd')) > -1) {\n                classes.push(k);\n              }\n            } else if (obj instanceof Array) {\n              obj.forEach(function (d) {\n                if (day.format('YYYY-MM-DD') === d) classes.push(k);\n              });\n            } else if (obj instanceof Function) {\n              if (obj(day)) {\n                classes.push(k);\n              }\n            } else if (obj.start && obj.end) {\n              var startDate = (0, _moment2.default)(obj.start, 'YYYY-MM-DD').add(-1, 'days');\n              var endDate = (0, _moment2.default)(obj.end, 'YYYY-MM-DD').add(1, 'days');\n\n              if (day.isBetween(startDate, endDate)) {\n                classes.push(k);\n              }\n            }\n          });\n        }\n\n        if (showWeekSeparators) {\n          if ((i - 1) % 7 === firstDayOfWeek && days.length) {\n            // push week separator\n            days.push(_react2.default.createElement('td', {\n              className: 'week-separator',\n              key: 'seperator-' + i\n            }));\n          }\n        }\n\n        days.push(_react2.default.createElement(_Day2.default, {\n          key: 'day-' + i,\n          day: day.isValid() ? day : null,\n          classes: classes.join(' '),\n          dayClicked: function dayClicked(d) {\n            return _this2.dayClicked(d, classes.join(' '));\n          },\n          dayHovered: function dayHovered(d) {\n            return _this2.dayHovered(d);\n          }\n        }));\n      });\n      return days;\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var _props4 = this.props,\n          month = _props4.month,\n          year = _props4.year;\n      return _react2.default.createElement('tr', null, _react2.default.createElement('td', {\n        className: 'month-name'\n      }, (0, _moment2.default)([year, month, 1]).format('MMM')), this.renderMonthDays());\n    }\n  }]);\n\n  return Month;\n}(_react.Component);\n\nMonth.propTypes = propTypes;\nMonth.defaultProps = defaultProps;\nexports.default = Month;","map":null,"metadata":{},"sourceType":"script"}