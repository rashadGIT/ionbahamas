{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar _propTypes = require(\"prop-types\");\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _classnames = require(\"classnames\");\n\nvar _classnames2 = _interopRequireDefault(_classnames);\n\nvar _requestAnimationFrame = require(\"dom-helpers/util/requestAnimationFrame\");\n\nvar _requestAnimationFrame2 = _interopRequireDefault(_requestAnimationFrame);\n\nvar _react = require(\"react\");\n\nvar _reactDom = require(\"react-dom\");\n\nvar _width = require(\"dom-helpers/query/width\");\n\nvar _width2 = _interopRequireDefault(_width);\n\nvar _scrollbarSize = require(\"dom-helpers/util/scrollbarSize\");\n\nvar _scrollbarSize2 = _interopRequireDefault(_scrollbarSize);\n\nvar _dates = require(\"./utils/dates\");\n\nvar _dates2 = _interopRequireDefault(_dates);\n\nvar _localizer = require(\"./localizer\");\n\nvar _localizer2 = _interopRequireDefault(_localizer);\n\nvar _DayColumn = require(\"./DayColumn\");\n\nvar _DayColumn2 = _interopRequireDefault(_DayColumn);\n\nvar _TimeColumn = require(\"./TimeColumn\");\n\nvar _TimeColumn2 = _interopRequireDefault(_TimeColumn);\n\nvar _DateContentRow = require(\"./DateContentRow\");\n\nvar _DateContentRow2 = _interopRequireDefault(_DateContentRow);\n\nvar _Header = require(\"./Header\");\n\nvar _Header2 = _interopRequireDefault(_Header);\n\nvar _messages = require(\"./utils/messages\");\n\nvar _messages2 = _interopRequireDefault(_messages);\n\nvar _propTypes3 = require(\"./utils/propTypes\");\n\nvar _helpers = require(\"./utils/helpers\");\n\nvar _accessors = require(\"./utils/accessors\");\n\nvar _eventLevels = require(\"./utils/eventLevels\");\n\nvar _calendar = require(\"./calendar.scss\");\n\nvar _calendar2 = _interopRequireDefault(_calendar);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _toConsumableArray(arr) {\n  if (Array.isArray(arr)) {\n    for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) {\n      arr2[i] = arr[i];\n    }\n\n    return arr2;\n  } else {\n    return Array.from(arr);\n  }\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar TimeGrid = function (_Component) {\n  _inherits(TimeGrid, _Component);\n\n  function TimeGrid(props) {\n    _classCallCheck(this, TimeGrid);\n\n    var _this = _possibleConstructorReturn(this, (TimeGrid.__proto__ || Object.getPrototypeOf(TimeGrid)).call(this, props));\n\n    _this.handleSelectAllDaySlot = function (slots, slotInfo) {\n      var onSelectSlot = _this.props.onSelectSlot;\n      (0, _helpers.notify)(onSelectSlot, {\n        slots: slots,\n        start: slots[0],\n        end: slots[slots.length - 1],\n        action: slotInfo.action\n      });\n    };\n\n    _this.checkOverflow = function () {\n      if (_this._updatingOverflow) {\n        return;\n      }\n\n      var isOverflowing = _this.refs.content.scrollHeight > _this.refs.content.clientHeight;\n\n      if (_this.state.isOverflowing !== isOverflowing) {\n        _this._updatingOverflow = true;\n\n        _this.setState({\n          isOverflowing: isOverflowing\n        }, function () {\n          _this._updatingOverflow = false;\n        });\n      }\n    };\n\n    _this.state = {\n      gutterWidth: undefined,\n      isOverflowing: null\n    };\n    _this.handleSelectEvent = _this.handleSelectEvent.bind(_this);\n    _this.handleDoubleClickEvent = _this.handleDoubleClickEvent.bind(_this);\n    _this.handleHeaderClick = _this.handleHeaderClick.bind(_this);\n    return _this;\n  }\n\n  _createClass(TimeGrid, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      this._gutters = [];\n      this.calculateScroll();\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      this.checkOverflow();\n\n      if (this.props.width == null) {\n        this.measureGutter();\n      }\n\n      this.applyScroll();\n      this.positionTimeIndicator();\n      this.triggerTimeIndicatorUpdate();\n      window.addEventListener(\"resize\", function () {\n        _requestAnimationFrame2.default.cancel(_this2.rafHandle);\n\n        _this2.rafHandle = (0, _requestAnimationFrame2.default)(_this2.checkOverflow);\n      });\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      window.clearTimeout(this._timeIndicatorTimeout);\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      if (this.props.width == null && !this.state.gutterWidth) {\n        this.measureGutter();\n      }\n\n      this.positionTimeIndicator();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var _props = this.props,\n          events = _props.events,\n          range = _props.range,\n          startAccessor = _props.startAccessor,\n          endAccessor = _props.endAccessor,\n          getNow = _props.getNow,\n          resources = _props.resources,\n          allDayAccessor = _props.allDayAccessor,\n          showMultiDayTimes = _props.showMultiDayTimes;\n      var width = this.props.width || this.state.gutterWidth;\n      var start = range[0];\n      var end = range[range.length - 1];\n      this.slots = range.length;\n      var allDayEvents = [];\n      var rangeEvents = [];\n      events.forEach(function (event) {\n        if ((0, _eventLevels.inRange)(event, start, end, _this3.props)) {\n          var eStart = (0, _accessors.accessor)(event, startAccessor);\n          var eEnd = (0, _accessors.accessor)(event, endAccessor);\n\n          if ((0, _accessors.accessor)(event, allDayAccessor) || !showMultiDayTimes && !_dates2.default.eq(eStart, eEnd, \"day\")) {\n            allDayEvents.push(event);\n          } else {\n            rangeEvents.push(event);\n          }\n        }\n      });\n      allDayEvents.sort(function (a, b) {\n        return (0, _eventLevels.sortEvents)(a, b, _this3.props);\n      });\n\n      var gutterRef = function gutterRef(ref) {\n        return _this3._gutters[1] = ref && (0, _reactDom.findDOMNode)(ref);\n      };\n\n      var eventsRendered = this.renderEvents(range, rangeEvents, getNow(), resources || [null]);\n      return React.createElement(\"div\", {\n        className: _calendar2.default.rbcTimeView\n      }, this.renderHeader(range, allDayEvents, width, resources), React.createElement(\"div\", {\n        ref: \"content\",\n        className: _calendar2.default.rbcTimeContent\n      }, React.createElement(_TimeColumn2.default, _extends({}, this.props, {\n        showLabels: true,\n        style: {\n          width: width\n        },\n        ref: gutterRef,\n        className: _calendar2.default.rbcTimeGutter\n      })), eventsRendered, React.createElement(\"div\", {\n        ref: \"timeIndicator\",\n        className: _calendar2.default.rbcCurrentTimeIndicator\n      })));\n    }\n  }, {\n    key: \"renderEvents\",\n    value: function renderEvents(range, events, today, resources) {\n      var _this4 = this;\n\n      var _props2 = this.props,\n          min = _props2.min,\n          max = _props2.max,\n          endAccessor = _props2.endAccessor,\n          startAccessor = _props2.startAccessor,\n          resourceAccessor = _props2.resourceAccessor,\n          resourceIdAccessor = _props2.resourceIdAccessor,\n          components = _props2.components;\n      return range.map(function (date, idx) {\n        var daysEvents = events.filter(function (event) {\n          return _dates2.default.inRange(date, (0, _accessors.accessor)(event, startAccessor), (0, _accessors.accessor)(event, endAccessor), \"day\");\n        });\n        return resources.map(function (resource, id) {\n          var eventsToDisplay = !resource ? daysEvents : daysEvents.filter(function (event) {\n            return (0, _accessors.accessor)(event, resourceAccessor) === (0, _accessors.accessor)(resource, resourceIdAccessor);\n          });\n          return React.createElement(_DayColumn2.default, _extends({}, _this4.props, {\n            min: _dates2.default.merge(date, min),\n            max: _dates2.default.merge(date, max),\n            resource: resource && resource.id,\n            eventComponent: components.event,\n            eventWrapperComponent: components.eventWrapper,\n            dayWrapperComponent: components.dayWrapper,\n            className: _dates2.default.eq(date, today, \"day\") ? _calendar2.default.rbcNow : \"\",\n            style: (0, _eventLevels.segStyle)(1, _this4.slots),\n            key: idx + \"-\" + id,\n            date: date,\n            events: eventsToDisplay\n          }));\n        });\n      });\n    }\n  }, {\n    key: \"renderHeader\",\n    value: function renderHeader(range, events, width, resources) {\n      var _this5 = this;\n\n      var _props3 = this.props,\n          messages = _props3.messages,\n          rtl = _props3.rtl,\n          selectable = _props3.selectable,\n          components = _props3.components,\n          getNow = _props3.getNow;\n\n      var _ref = this.state || {},\n          isOverflowing = _ref.isOverflowing;\n\n      var style = {};\n\n      if (isOverflowing) {\n        style[rtl ? \"marginLeft\" : \"marginRight\"] = (0, _scrollbarSize2.default)() + \"px\";\n      }\n\n      var headerRendered = resources ? this.renderHeaderResources(range, resources) : (0, _messages2.default)(messages).allDay;\n      return React.createElement(\"div\", {\n        ref: \"headerCell\",\n        className: (0, _classnames2.default)(_calendar2.default.rbcTimeHeader, isOverflowing && _calendar2.default.rbcOverflowing),\n        style: style\n      }, React.createElement(\"div\", {\n        className: _calendar2.default.rbcRow\n      }, React.createElement(\"div\", {\n        className: (0, _classnames2.default)(_calendar2.default.rbcLabel, _calendar2.default.rbcHeaderGutter),\n        style: {\n          width: width\n        }\n      }), this.renderHeaderCells(range)), resources && React.createElement(\"div\", {\n        className: (0, _classnames2.default)(_calendar2.default.rbcRow, _calendar2.default.rbcRowResource)\n      }, React.createElement(\"div\", {\n        className: (0, _classnames2.default)(_calendar2.default.rbcLabel, _calendar2.default.rbcHeaderGutter),\n        style: {\n          width: width\n        }\n      }), headerRendered), React.createElement(\"div\", {\n        className: _calendar2.default.rbcRow\n      }, React.createElement(\"div\", {\n        ref: function ref(_ref2) {\n          return _this5._gutters[0] = _ref2;\n        },\n        className: (0, _classnames2.default)(_calendar2.default.rbcLabel, _calendar2.default.rbcHeaderGutter),\n        style: {\n          width: width\n        }\n      }, (0, _messages2.default)(messages).allDay), React.createElement(_DateContentRow2.default, {\n        getNow: getNow,\n        minRows: 2,\n        range: range,\n        rtl: this.props.rtl,\n        events: events,\n        className: _calendar2.default.rbcAlldayCell,\n        selectable: selectable,\n        onSelectSlot: this.handleSelectAllDaySlot,\n        dateCellWrapper: components.dateCellWrapper,\n        dayPropGetter: this.props.dayPropGetter,\n        eventComponent: this.props.components.event,\n        eventWrapperComponent: this.props.components.eventWrapper,\n        titleAccessor: this.props.titleAccessor,\n        tooltipAccessor: this.props.tooltipAccessor,\n        startAccessor: this.props.startAccessor,\n        endAccessor: this.props.endAccessor,\n        allDayAccessor: this.props.allDayAccessor,\n        eventPropGetter: this.props.eventPropGetter,\n        selected: this.props.selected,\n        isAllDay: true,\n        onSelect: this.handleSelectEvent,\n        onDoubleClick: this.handleDoubleClickEvent,\n        longPressThreshold: this.props.longPressThreshold\n      })));\n    }\n  }, {\n    key: \"renderHeaderResources\",\n    value: function renderHeaderResources(range, resources) {\n      var _this6 = this;\n\n      var resourceTitleAccessor = this.props.resourceTitleAccessor;\n      return range.map(function (date, i) {\n        return resources.map(function (resource, j) {\n          return React.createElement(\"div\", {\n            key: i + \"-\" + j,\n            className: _calendar2.default.rbcHeader,\n            style: (0, _eventLevels.segStyle)(1, _this6.slots)\n          }, React.createElement(\"span\", null, (0, _accessors.accessor)(resource, resourceTitleAccessor)));\n        });\n      });\n    }\n  }, {\n    key: \"renderHeaderCells\",\n    value: function renderHeaderCells(range) {\n      var _this7 = this;\n\n      var _props4 = this.props,\n          dayFormat = _props4.dayFormat,\n          culture = _props4.culture,\n          components = _props4.components,\n          dayPropGetter = _props4.dayPropGetter,\n          getDrilldownView = _props4.getDrilldownView;\n      var HeaderComponent = components.header || _Header2.default;\n      return range.map(function (date, i) {\n        var drilldownView = getDrilldownView(date);\n\n        var label = _localizer2.default.format(date, dayFormat, culture);\n\n        var _ref3 = dayPropGetter && dayPropGetter(date) || {},\n            className = _ref3.className,\n            dayStyles = _ref3.style;\n\n        var header = React.createElement(HeaderComponent, {\n          date: date,\n          label: label,\n          localizer: _localizer2.default,\n          format: dayFormat,\n          culture: culture\n        });\n        return React.createElement(\"div\", {\n          key: i,\n          className: (0, _classnames2.default)(_calendar2.default.rbcHeader, className),\n          style: Object.assign({}, dayStyles, (0, _eventLevels.segStyle)(1, _this7.slots))\n        }, drilldownView ? React.createElement(\"a\", {\n          href: \"#\",\n          onClick: function onClick(e) {\n            return _this7.handleHeaderClick(date, drilldownView, e);\n          }\n        }, header) : React.createElement(\"span\", null, header));\n      });\n    }\n  }, {\n    key: \"handleHeaderClick\",\n    value: function handleHeaderClick(date, view, e) {\n      e.preventDefault();\n      (0, _helpers.notify)(this.props.onDrillDown, [date, view]);\n    }\n  }, {\n    key: \"handleSelectEvent\",\n    value: function handleSelectEvent() {\n      for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      (0, _helpers.notify)(this.props.onSelectEvent, args);\n    }\n  }, {\n    key: \"handleDoubleClickEvent\",\n    value: function handleDoubleClickEvent() {\n      for (var _len2 = arguments.length, args = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n        args[_key2] = arguments[_key2];\n      }\n\n      (0, _helpers.notify)(this.props.onDoubleClickEvent, args);\n    }\n  }, {\n    key: \"handleSelectAlldayEvent\",\n    value: function handleSelectAlldayEvent() {\n      //cancel any pending selections so only the event click goes through.\n      this.clearSelection();\n\n      for (var _len3 = arguments.length, args = Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n        args[_key3] = arguments[_key3];\n      }\n\n      (0, _helpers.notify)(this.props.onSelectEvent, args);\n    }\n  }, {\n    key: \"clearSelection\",\n    value: function clearSelection() {\n      clearTimeout(this._selectTimer);\n      this._pendingSelection = [];\n    }\n  }, {\n    key: \"measureGutter\",\n    value: function measureGutter() {\n      var width = this.state.gutterWidth;\n      var gutterCells = this._gutters;\n\n      if (!width) {\n        width = Math.max.apply(Math, _toConsumableArray(gutterCells.map(_width2.default)));\n\n        if (width) {\n          this.setState({\n            gutterWidth: width\n          });\n        }\n      }\n    }\n  }, {\n    key: \"applyScroll\",\n    value: function applyScroll() {\n      if (this._scrollRatio) {\n        var content = this.refs.content;\n        content.scrollTop = content.scrollHeight * this._scrollRatio; // Only do this once\n\n        this._scrollRatio = null;\n      }\n    }\n  }, {\n    key: \"calculateScroll\",\n    value: function calculateScroll() {\n      var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.props;\n      var min = props.min,\n          max = props.max,\n          scrollToTime = props.scrollToTime;\n\n      var diffMillis = scrollToTime - _dates2.default.startOf(scrollToTime, \"day\");\n\n      var totalMillis = _dates2.default.diff(max, min);\n\n      this._scrollRatio = diffMillis / totalMillis;\n    }\n  }, {\n    key: \"positionTimeIndicator\",\n    value: function positionTimeIndicator() {\n      var _props5 = this.props,\n          rtl = _props5.rtl,\n          min = _props5.min,\n          max = _props5.max,\n          getNow = _props5.getNow,\n          range = _props5.range;\n      var current = getNow();\n      var timeIndicator = this.refs.timeIndicator;\n      var timeGutter = this._gutters[this._gutters.length - 1];\n\n      if (timeGutter && _dates2.default.eq(current, range, \"day\")) {\n        var secondsGrid = _dates2.default.diff(max, min, \"seconds\");\n\n        var secondsPassed = _dates2.default.diff(current, min, \"seconds\");\n\n        var factor = secondsPassed / secondsGrid;\n        var pixelHeight = timeGutter.offsetHeight;\n        var offset = Math.floor(factor * pixelHeight);\n        timeIndicator.style.display = \"block\";\n        timeIndicator.style[rtl ? \"left\" : \"right\"] = 0;\n        timeIndicator.style[rtl ? \"right\" : \"left\"] = timeGutter.offsetWidth + \"px\";\n        timeIndicator.style.top = offset + \"px\";\n      } else {\n        timeIndicator.style.display = \"none\";\n      }\n    }\n  }, {\n    key: \"triggerTimeIndicatorUpdate\",\n    value: function triggerTimeIndicatorUpdate() {\n      var _this8 = this; // Update the position of the time indicator every minute\n\n\n      this._timeIndicatorTimeout = window.setTimeout(function () {\n        _this8.positionTimeIndicator();\n\n        _this8.triggerTimeIndicatorUpdate();\n      }, 60000);\n    }\n  }]);\n\n  return TimeGrid;\n}(_react.Component);\n\nexports.default = TimeGrid;\n;\nTimeGrid.propTypes = {\n  events: _propTypes2.default.array.isRequired,\n  resources: _propTypes2.default.array,\n  step: _propTypes2.default.number,\n  range: _propTypes2.default.arrayOf(_propTypes2.default.instanceOf(Date)),\n  min: _propTypes2.default.instanceOf(Date),\n  max: _propTypes2.default.instanceOf(Date),\n  getNow: _propTypes2.default.func.isRequired,\n  scrollToTime: _propTypes2.default.instanceOf(Date),\n  eventPropGetter: _propTypes2.default.func,\n  dayPropGetter: _propTypes2.default.func,\n  dayFormat: _propTypes3.dateFormat,\n  showMultiDayTimes: _propTypes2.default.bool,\n  culture: _propTypes2.default.string,\n  rtl: _propTypes2.default.bool,\n  width: _propTypes2.default.number,\n  titleAccessor: _propTypes3.accessor.isRequired,\n  tooltipAccessor: _propTypes3.accessor.isRequired,\n  allDayAccessor: _propTypes3.accessor.isRequired,\n  startAccessor: _propTypes3.accessor.isRequired,\n  endAccessor: _propTypes3.accessor.isRequired,\n  resourceAccessor: _propTypes3.accessor.isRequired,\n  resourceIdAccessor: _propTypes3.accessor.isRequired,\n  resourceTitleAccessor: _propTypes3.accessor.isRequired,\n  selected: _propTypes2.default.object,\n  selectable: _propTypes2.default.oneOf([true, false, \"ignoreEvents\"]),\n  longPressThreshold: _propTypes2.default.number,\n  onNavigate: _propTypes2.default.func,\n  onSelectSlot: _propTypes2.default.func,\n  onSelectEnd: _propTypes2.default.func,\n  onSelectStart: _propTypes2.default.func,\n  onSelectEvent: _propTypes2.default.func,\n  onDoubleClickEvent: _propTypes2.default.func,\n  onDrillDown: _propTypes2.default.func,\n  getDrilldownView: _propTypes2.default.func.isRequired,\n  messages: _propTypes2.default.object,\n  components: _propTypes2.default.object.isRequired\n};\nTimeGrid.defaultProps = {\n  step: 30,\n  min: _dates2.default.startOf(new Date(), \"day\"),\n  max: _dates2.default.endOf(new Date(), \"day\"),\n  scrollToTime: new Date(),\n\n  /* this is needed to satisfy requirements from TimeColumn required props\n   * There is a strange bug in React, using ...TimeColumn.defaultProps causes weird crashes\n   */\n  type: \"gutter\"\n};","map":null,"metadata":{},"sourceType":"script"}