{"ast":null,"code":"import _classCallCheck from \"C:\\\\git\\\\ionbahamas\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\git\\\\ionbahamas\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\git\\\\ionbahamas\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\git\\\\ionbahamas\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\git\\\\ionbahamas\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"C:\\\\git\\\\ionbahamas\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"C:\\\\git\\\\ionbahamas\\\\src\\\\components\\\\PaymentForm.jsx\";\nimport React, { Component } from \"react\";\nimport { Button, Form, FormGroup, Label, Input, FormText } from 'reactstrap';\nvar styles = {\n  name: {// verticalAlign: \"top\",\n    // display: \"none\",\n    // margin: 0,\n    // border: \"none\",\n    // fontSize: \"16px\",\n    // fontFamily: \"Helvetica Neue\",\n    // padding: \"16px\",\n    // color: \"#373F4A\",\n    // // backgroundColor: \"transparent\",\n    // lineHeight: \"1.15em\",\n    // placeholderColor: \"#000\",\n    // _webkitFontSmoothing: \"antialiased\",\n    // _mozOsxFontSmoothing: \"grayscale\"\n  },\n  leftCenter: {\n    float: \"left\",\n    textAlign: \"center\"\n  },\n  blockRight: {\n    display: \"block\",\n    float: \"right\"\n  },\n  center: {\n    textAlign: \"center\"\n  },\n  textbox: {\n    height: '100%',\n    display: 'block',\n    width: '100%',\n    // padding: '.375rem .75rem',\n    // fontSize: '1rem',\n    // fontWeight: 400,\n    // lineHeight: 1.5,\n    // color: '#495057',\n    // backgroundColor: '#fff',\n    // backgroundClip: 'padding-box',\n    border: '1px solid #ced4da',\n    // borderRadius: '.25rem',\n    transition: 'none'\n  }\n};\n\nvar PaymentForm =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(PaymentForm, _Component);\n\n  function PaymentForm(props) {\n    var _this;\n\n    _classCallCheck(this, PaymentForm);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(PaymentForm).call(this, props));\n    _this.state = {\n      cardBrand: \"\",\n      nonce: undefined,\n      googlePay: false,\n      applePay: false,\n      masterpass: false,\n      price: 0\n    };\n    _this.requestCardNonce = _this.requestCardNonce.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(PaymentForm, [{\n    key: \"requestCardNonce\",\n    value: function requestCardNonce() {\n      this.paymentForm.requestCardNonce();\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      var config = {\n        applicationId: \"sandbox-sq0idb-4BIn2NFF6UL8jHgLxzah4g\",\n        //locationId: \"GMT96A77XABR1\",\n        inputClass: \"sq-input\",\n        autoBuild: false,\n        inputStyles: [{\n          fontSize: \"16px\",\n          fontFamily: \"Helvetica Neue\",\n          padding: \"16px\",\n          color: \"#373F4A\",\n          backgroundColor: \"transparent\",\n          lineHeight: \"1.15em\",\n          placeholderColor: \"#000\",\n          _webkitFontSmoothing: \"antialiased\",\n          _mozOsxFontSmoothing: \"grayscale\"\n        }],\n        applePay: {\n          elementId: \"sq-apple-pay\"\n        },\n        masterpass: {\n          elementId: \"sq-masterpass\"\n        },\n        googlePay: {\n          elementId: \"sq-google-pay\"\n        },\n        cardNumber: {\n          elementId: \"sq-card-number\",\n          placeholder: \"• • • •  • • • •  • • • •  • • • •\" // placeholder: \"Card NUmber\"\n\n        },\n        cvv: {\n          elementId: \"sq-cvv\",\n          placeholder: \"CVV\"\n        },\n        expirationDate: {\n          elementId: \"sq-expiration-date\",\n          placeholder: \"MM/YY\"\n        },\n        postalCode: {\n          elementId: \"sq-postal-code\",\n          placeholder: \"Zip\"\n        },\n        callbacks: {\n          methodsSupported: function methodsSupported(methods) {\n            if (methods.googlePay) {\n              _this2.setState({\n                googlePay: methods.googlePay\n              });\n            }\n\n            if (methods.applePay) {\n              _this2.setState({\n                applePay: methods.applePay\n              });\n            }\n\n            if (methods.masterpass) {\n              _this2.setState({\n                masterpass: methods.masterpass\n              });\n            }\n\n            return;\n          },\n          createPaymentRequest: function createPaymentRequest() {\n            return {\n              requestShippingAddress: false,\n              requestBillingInfo: true,\n              currencyCode: \"USD\",\n              countryCode: \"US\",\n              total: {\n                label: \"MERCHANT NAME\",\n                amount: \"100\",\n                pending: false\n              },\n              lineItems: [{\n                label: \"Subtotal\",\n                amount: \"100\",\n                pending: false\n              }]\n            };\n          },\n          cardNonceResponseReceived: function cardNonceResponseReceived(errors, nonce, cardData) {\n            if (errors) {\n              // Log errors from nonce generation to the Javascript console\n              console.log(\"Encountered errors:\");\n              errors.forEach(function (error) {\n                console.log(\"  \" + error.message);\n              });\n              return;\n            }\n\n            _this2.setState({\n              nonce: nonce\n            });\n\n            fetch('http://localhost:3001/process-payment', {\n              method: 'POST',\n              headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json'\n              },\n              body: JSON.stringify({\n                nonce: nonce,\n                amount: _this2.props.price\n              })\n            }).catch(function (err) {\n              alert('Network error: ' + err);\n            }).then(function (response) {\n              if (!response.ok) {\n                return response.text().then(function (errorInfo) {\n                  return Promise.reject(errorInfo);\n                });\n              }\n\n              return response.text();\n            }).then(function (data) {\n              console.log(JSON.stringify(data));\n              alert('Payment complete successfully!\\nCheck browser developer console for more details');\n            }).catch(function (err) {\n              console.error(err);\n              alert('Payment failed to complete!\\nCheck browser developer console for more details');\n            });\n          },\n          unsupportedBrowserDetected: function unsupportedBrowserDetected() {},\n          inputEventReceived: function inputEventReceived(inputEvent) {\n            switch (inputEvent.eventType) {\n              case \"focusClassAdded\":\n                break;\n\n              case \"focusClassRemoved\":\n                break;\n\n              case \"errorClassAdded\":\n                document.getElementById(\"error\").innerHTML = \"Please fix card information errors before continuing.\";\n                break;\n\n              case \"errorClassRemoved\":\n                document.getElementById(\"error\").style.display = \"none\";\n                break;\n\n              case \"cardBrandChanged\":\n                if (inputEvent.cardBrand !== \"unknown\") {\n                  _this2.setState({\n                    cardBrand: inputEvent.cardBrand\n                  });\n                } else {\n                  _this2.setState({\n                    cardBrand: \"\"\n                  });\n                }\n\n                break;\n\n              case \"postalCodeChanged\":\n                break;\n\n              default:\n                break;\n            }\n          },\n          paymentFormLoaded: function paymentFormLoaded() {\n            document.getElementById(\"name\").style.display = \"inline-flex\";\n          }\n        }\n      };\n      this.paymentForm = new this.props.paymentForm(config);\n      this.paymentForm.build();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 235\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        id: \"form-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 236\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        id: \"sq-walletbox\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 237\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        style: {\n          display: this.state.applePay ? \"inherit\" : \"none\"\n        },\n        className: \"wallet-button\",\n        id: \"sq-apple-pay\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 238\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        style: {\n          display: this.state.masterpass ? \"block\" : \"none\"\n        },\n        className: \"wallet-button\",\n        id: \"sq-masterpass\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 243\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        style: {\n          display: this.state.googlePay ? \"inherit\" : \"none\"\n        },\n        className: \"wallet-button\",\n        id: \"sq-google-pay\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 248\n        },\n        __self: this\n      }), React.createElement(\"hr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 253\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        id: \"sq-ccbox\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 256\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 257\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        style: styles.blockRight,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 259\n        },\n        __self: this\n      }, this.state.cardBrand.toUpperCase())), React.createElement(Input, {\n        id: \"name\",\n        style: styles.name,\n        type: \"text\",\n        placeholder: \"Full Name\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 263\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        id: \"cc-field-wrapper\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 269\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        style: styles.textbox,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 270\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        id: \"sq-card-number\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 270\n        },\n        __self: this\n      })), React.createElement(\"input\", {\n        type: \"hidden\",\n        id: \"card-nonce\",\n        name: \"nonce\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 271\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"form-control\",\n        id: \"sq-expiration-date\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 272\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"form-control\",\n        id: \"sq-cvv\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 273\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        id: \"sq-postal-code\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 275\n        },\n        __self: this\n      })), React.createElement(Button, {\n        style: {\n          width: \"100%\"\n        },\n        color: \"primary\",\n        className: \"button-credit-card\",\n        onClick: this.requestCardNonce,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 277\n        },\n        __self: this\n      }, \"Pay $\", this.props.price)), React.createElement(\"p\", {\n        style: styles.center,\n        id: \"error\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 291\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return PaymentForm;\n}(Component);\n\nexport { PaymentForm as default };","map":{"version":3,"sources":["C:\\git\\ionbahamas\\src\\components\\PaymentForm.jsx"],"names":["React","Component","Button","Form","FormGroup","Label","Input","FormText","styles","name","leftCenter","float","textAlign","blockRight","display","center","textbox","height","width","border","transition","PaymentForm","props","state","cardBrand","nonce","undefined","googlePay","applePay","masterpass","price","requestCardNonce","bind","paymentForm","config","applicationId","inputClass","autoBuild","inputStyles","fontSize","fontFamily","padding","color","backgroundColor","lineHeight","placeholderColor","_webkitFontSmoothing","_mozOsxFontSmoothing","elementId","cardNumber","placeholder","cvv","expirationDate","postalCode","callbacks","methodsSupported","methods","setState","createPaymentRequest","requestShippingAddress","requestBillingInfo","currencyCode","countryCode","total","label","amount","pending","lineItems","cardNonceResponseReceived","errors","cardData","console","log","forEach","error","message","fetch","method","headers","body","JSON","stringify","catch","err","alert","then","response","ok","text","errorInfo","Promise","reject","data","unsupportedBrowserDetected","inputEventReceived","inputEvent","eventType","document","getElementById","innerHTML","style","paymentFormLoaded","build","toUpperCase"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport { Button, Form, FormGroup, Label, Input, FormText } from 'reactstrap';\r\n\r\nconst styles = {\r\n  name: {\r\n    // verticalAlign: \"top\",\r\n    // display: \"none\",\r\n    // margin: 0,\r\n    // border: \"none\",\r\n    // fontSize: \"16px\",\r\n    // fontFamily: \"Helvetica Neue\",\r\n    // padding: \"16px\",\r\n    // color: \"#373F4A\",\r\n    // // backgroundColor: \"transparent\",\r\n    // lineHeight: \"1.15em\",\r\n    // placeholderColor: \"#000\",\r\n    // _webkitFontSmoothing: \"antialiased\",\r\n    // _mozOsxFontSmoothing: \"grayscale\"\r\n  },\r\n  leftCenter: {\r\n    float: \"left\",\r\n    textAlign: \"center\"\r\n  },\r\n  blockRight: {\r\n    display: \"block\",\r\n    float: \"right\"\r\n  },\r\n  center: {\r\n    textAlign: \"center\"\r\n  },\r\n  textbox : {\r\n    height : '100%',\r\n    display: 'block',\r\n    width: '100%',\r\n    // padding: '.375rem .75rem',\r\n    // fontSize: '1rem',\r\n    // fontWeight: 400,\r\n    // lineHeight: 1.5,\r\n    // color: '#495057',\r\n    // backgroundColor: '#fff',\r\n    // backgroundClip: 'padding-box',\r\n    border: '1px solid #ced4da',\r\n    // borderRadius: '.25rem',\r\n    transition: 'none'\r\n  }\r\n};\r\n\r\nexport default class PaymentForm extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      cardBrand: \"\",\r\n      nonce: undefined,\r\n      googlePay: false,\r\n      applePay: false,\r\n      masterpass: false,\r\n      price : 0\r\n    };\r\n    this.requestCardNonce = this.requestCardNonce.bind(this);\r\n  }\r\n\r\n  requestCardNonce() {\r\n    this.paymentForm.requestCardNonce();\r\n  }\r\n\r\n  componentDidMount() {\r\n    const config = {\r\n      applicationId: \"sandbox-sq0idb-4BIn2NFF6UL8jHgLxzah4g\",\r\n      //locationId: \"GMT96A77XABR1\",\r\n      inputClass: \"sq-input\",\r\n      autoBuild: false,\r\n      inputStyles: [\r\n        {\r\n          fontSize: \"16px\",\r\n          fontFamily: \"Helvetica Neue\",\r\n          padding: \"16px\",\r\n          color: \"#373F4A\",\r\n          backgroundColor: \"transparent\",\r\n          lineHeight: \"1.15em\",\r\n          placeholderColor: \"#000\",\r\n          _webkitFontSmoothing: \"antialiased\",\r\n          _mozOsxFontSmoothing: \"grayscale\"\r\n        }\r\n      ],\r\n      applePay: {\r\n        elementId: \"sq-apple-pay\"\r\n      },\r\n      masterpass: {\r\n        elementId: \"sq-masterpass\"\r\n      },\r\n      googlePay: {\r\n        elementId: \"sq-google-pay\"\r\n      },\r\n      cardNumber: {\r\n        elementId: \"sq-card-number\",\r\n        placeholder: \"• • • •  • • • •  • • • •  • • • •\"\r\n        // placeholder: \"Card NUmber\"\r\n      },\r\n      cvv: {\r\n        elementId: \"sq-cvv\",\r\n        placeholder: \"CVV\"\r\n      },\r\n      expirationDate: {\r\n        elementId: \"sq-expiration-date\",\r\n        placeholder: \"MM/YY\"\r\n      },\r\n      postalCode: {\r\n        elementId: \"sq-postal-code\",\r\n        placeholder: \"Zip\"\r\n      },\r\n      callbacks: {\r\n        methodsSupported: methods => {\r\n          if (methods.googlePay) {\r\n            this.setState({\r\n              googlePay: methods.googlePay\r\n            });\r\n          }\r\n          if (methods.applePay) {\r\n            this.setState({\r\n              applePay: methods.applePay\r\n            });\r\n          }\r\n          if (methods.masterpass) {\r\n            this.setState({\r\n              masterpass: methods.masterpass\r\n            });\r\n          }\r\n          return;\r\n        },\r\n        createPaymentRequest: () => {\r\n          return {\r\n            requestShippingAddress: false,\r\n            requestBillingInfo: true,\r\n            currencyCode: \"USD\",\r\n            countryCode: \"US\",\r\n            total: {\r\n              label: \"MERCHANT NAME\",\r\n              amount: \"100\",\r\n              pending: false\r\n            },\r\n            lineItems: [\r\n              {\r\n                label: \"Subtotal\",\r\n                amount: \"100\",\r\n                pending: false\r\n              }\r\n            ]\r\n          };\r\n        },\r\n        cardNonceResponseReceived: (errors, nonce, cardData) => {\r\n          if (errors) {\r\n            // Log errors from nonce generation to the Javascript console\r\n            console.log(\"Encountered errors:\");\r\n            errors.forEach(function(error) {\r\n              console.log(\"  \" + error.message);\r\n            });\r\n\r\n            return;\r\n          }\r\n          this.setState({\r\n            nonce: nonce\r\n          });\r\n\r\n          fetch('http://localhost:3001/process-payment', {\r\n            method: 'POST',\r\n            headers: {\r\n              'Accept': 'application/json',\r\n              'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({\r\n              nonce: nonce,\r\n              amount: this.props.price\r\n            })\r\n          })\r\n          .catch(err => {\r\n            alert('Network error: ' + err);\r\n          })\r\n          .then(response => {\r\n            if (!response.ok) {\r\n              return response.text().then(errorInfo => Promise.reject(errorInfo));\r\n            }\r\n            return response.text();\r\n          })\r\n          .then(data => {\r\n            console.log(JSON.stringify(data));\r\n            alert('Payment complete successfully!\\nCheck browser developer console for more details');\r\n          })\r\n          .catch(err => {\r\n            console.error(err);\r\n            alert('Payment failed to complete!\\nCheck browser developer console for more details');\r\n          });\r\n        },\r\n        unsupportedBrowserDetected: () => {},\r\n        inputEventReceived: inputEvent => {\r\n          switch (inputEvent.eventType) {\r\n            case \"focusClassAdded\":\r\n              break;\r\n            case \"focusClassRemoved\":\r\n              break;\r\n            case \"errorClassAdded\":\r\n              document.getElementById(\"error\").innerHTML =\r\n                \"Please fix card information errors before continuing.\";\r\n              break;\r\n            case \"errorClassRemoved\":\r\n              document.getElementById(\"error\").style.display = \"none\";\r\n              break;\r\n            case \"cardBrandChanged\":\r\n              if (inputEvent.cardBrand !== \"unknown\") {\r\n                this.setState({\r\n                  cardBrand: inputEvent.cardBrand\r\n                });\r\n              } else {\r\n                this.setState({\r\n                  cardBrand: \"\"\r\n                });\r\n              }\r\n              break;\r\n            case \"postalCodeChanged\":\r\n              break;\r\n            default:\r\n              break;\r\n          }\r\n        },\r\n        paymentFormLoaded: function() {\r\n          document.getElementById(\"name\").style.display = \"inline-flex\";\r\n        }\r\n      }\r\n    };\r\n    this.paymentForm = new this.props.paymentForm(config);\r\n    this.paymentForm.build();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"container\">\r\n        <div id=\"form-container\">\r\n          <div id=\"sq-walletbox\">\r\n            <button\r\n              style={{ display: this.state.applePay ? \"inherit\" : \"none\" }}\r\n              className=\"wallet-button\"\r\n              id=\"sq-apple-pay\"\r\n            />\r\n            <button\r\n              style={{ display: this.state.masterpass ? \"block\" : \"none\" }}\r\n              className=\"wallet-button\"\r\n              id=\"sq-masterpass\"\r\n            />\r\n            <button\r\n              style={{ display: this.state.googlePay ? \"inherit\" : \"none\" }}\r\n              className=\"wallet-button\"\r\n              id=\"sq-google-pay\"\r\n            />\r\n            <hr />\r\n          </div>\r\n\r\n          <div id=\"sq-ccbox\">\r\n            <p>\r\n              {/* <span style={styles.leftCenter}>Enter Card Info Below </span> */}\r\n              <span style={styles.blockRight}>\r\n                {this.state.cardBrand.toUpperCase()}\r\n              </span>\r\n            </p>\r\n            <Input\r\n              id=\"name\"\r\n              style={styles.name}\r\n              type=\"text\"\r\n              placeholder=\"Full Name\"\r\n            />\r\n            <div id=\"cc-field-wrapper\">\r\n              <div style={styles.textbox}><div  id=\"sq-card-number\" /></div>\r\n              <input type=\"hidden\" id=\"card-nonce\" name=\"nonce\" />\r\n              <div className=\"form-control\" id=\"sq-expiration-date\" />\r\n              <div className=\"form-control\" id=\"sq-cvv\" />\r\n            </div>\r\n            <div id=\"sq-postal-code\" />\r\n          </div>\r\n          <Button \r\n            style={{width : \"100%\"}} \r\n            color=\"primary\" \r\n            className=\"button-credit-card\"\r\n            onClick={this.requestCardNonce} >\r\n              Pay ${this.props.price}\r\n          </Button>\r\n          {/* <button\r\n            className=\"button-credit-card\"\r\n            onClick={this.requestCardNonce}\r\n          >\r\n            Pay ${this.props.price}\r\n          </button> */}\r\n        </div>\r\n        <p style={styles.center} id=\"error\" />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}