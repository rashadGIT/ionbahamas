{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar _propTypes = require(\"prop-types\");\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _react = require(\"react\");\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _Week = require(\"./Week\");\n\nvar _Week2 = _interopRequireDefault(_Week);\n\nvar _TimeGrid = require(\"./TimeGrid\");\n\nvar _TimeGrid2 = _interopRequireDefault(_TimeGrid);\n\nvar _localizer = require(\"./localizer\");\n\nvar _localizer2 = _interopRequireDefault(_localizer);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _toArray(arr) {\n  return Array.isArray(arr) ? arr : Array.from(arr);\n}\n\nfunction _objectWithoutProperties(obj, keys) {\n  var target = {};\n\n  for (var i in obj) {\n    if (keys.indexOf(i) >= 0) continue;\n    if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;\n    target[i] = obj[i];\n  }\n\n  return target;\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nfunction workWeekRange(date, options) {\n  return _Week2.default.range(date, options).filter(function (d) {\n    return [6, 0].indexOf(d.getDay()) === -1;\n  });\n}\n\nvar WorkWeek = function (_React$Component) {\n  _inherits(WorkWeek, _React$Component);\n\n  function WorkWeek() {\n    _classCallCheck(this, WorkWeek);\n\n    return _possibleConstructorReturn(this, (WorkWeek.__proto__ || Object.getPrototypeOf(WorkWeek)).apply(this, arguments));\n  }\n\n  _createClass(WorkWeek, [{\n    key: \"render\",\n    value: function render() {\n      var _props = this.props,\n          date = _props.date,\n          props = _objectWithoutProperties(_props, [\"date\"]);\n\n      var range = workWeekRange(date, this.props);\n      return _react2.default.createElement(_TimeGrid2.default, _extends({}, props, {\n        range: range,\n        eventOffset: 15\n      }));\n    }\n  }]);\n\n  return WorkWeek;\n}(_react2.default.Component);\n\nWorkWeek.navigate = _Week2.default.navigate;\n\nWorkWeek.title = function (date, _ref) {\n  var formats = _ref.formats,\n      culture = _ref.culture;\n\n  var _workWeekRange = workWeekRange(date, {\n    culture: culture\n  }),\n      _workWeekRange2 = _toArray(_workWeekRange),\n      start = _workWeekRange2[0],\n      rest = _workWeekRange2.slice(1);\n\n  return _localizer2.default.format({\n    start: start,\n    end: rest.pop()\n  }, formats.dayRangeHeaderFormat, culture);\n};\n\nWorkWeek.propTypes = {\n  date: _propTypes2.default.instanceOf(Date).isRequired\n};\nWorkWeek.defaultProps = _TimeGrid2.default.defaultProps;\nexports.default = WorkWeek;","map":null,"metadata":{},"sourceType":"script"}